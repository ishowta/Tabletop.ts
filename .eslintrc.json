{
  "env": {
    "browser": true,
    "es2020": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:import/typescript",

    // formatter
    "plugin:prettier/recommended",
    "prettier/@typescript-eslint"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "sourceType": "module"
  },
  "settings": {
    "import/extensions": [".js", ".ts"],
    "import/parsers": {
      "@typescript-eslint/parser": [".ts"]
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".ts"]
      }
    }
  },
  "rules": {
    // use CamelCase
    "camelcase": [
      "error",
      {
        "properties": "always"
      }
    ],

    // should use preserverd code
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      { "argsIgnorePattern": "^_" }
    ],
    "import/prefer-default-export": "off",

    // `switch` is not expression
    "no-nested-ternary": "off",

    // because framework
    "@typescript-eslint/explicit-module-boundary-types": "off",

    // strict types
    // "@typescript-eslint/prefer-readonly-parameter-types":'error', // Bug
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      {
        "assertionStyle": "never"
      }
    ],
    "@typescript-eslint/strict-boolean-expressions": [
      "error",
      {
        "allowString": true,
        "allowNumber": true,
        "allowNullableObject": false, // to function object
        "allowNullableBoolean": false,
        "allowNullableString": false,
        "allowNullableNumber": false,
        "allowAny": false
      }
    ],

    // erase only javascripts rules
    "import/extensions": ["error", "never"],
    "default-case": "off",
    "consistent-return": "off",
    "no-param-reassign": ["error", { "props": false }],
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": "off"
  }
}
